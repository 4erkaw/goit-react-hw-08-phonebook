{"version":3,"file":"static/js/222.2986de11.chunk.js","mappings":"qQAOe,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MACF,IAAK,SACHN,EAAUM,GACV,MACF,QACE,SA2BN,OACE,kBAAMC,UAAWC,EAAAA,EAAAA,UAAaC,SAdf,SAAAL,GACfA,EAAEM,iBACF,IAAMb,EAAOO,EAAEO,OAAOd,KAAKS,MACrBP,EAASK,EAAEO,OAAOZ,OAAOO,MAC/B,OAdmB,SAAAT,GACnB,QAAKF,IAGK,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUiB,MAAK,SAAAC,GAC1B,OAAOA,EAAQhB,KAAKiB,gBAAkBjB,EAAKiB,kBASzCC,CAAalB,GACRmB,EAAAA,OAAAA,QAAA,UAAkBnB,EAAlB,6BAETK,EAAW,CAAEL,KAAAA,EAAME,OAAAA,IACnBD,EAAQ,IACRE,EAAU,IACHgB,EAAAA,OAAAA,QAAA,UAAkBnB,EAAlB,kCAIP,WACE,kCACO,SAAC,MAAD,CAAWoB,KAAK,aAEvB,kBACEX,MAAOT,EACPqB,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUnB,KAEZ,mCACQ,SAAC,MAAD,CAASc,KAAK,aAEtB,kBACEX,MAAOP,EACPmB,KAAK,MACLrB,KAAK,SACLsB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUnB,KAEZ,mBAAQe,KAAK,SAAb,4BC1EN,MAAyB,uB,oBCIV,SAASK,IACtB,OAA4B3B,EAAAA,EAAAA,UAAS,IAArC,eAAO4B,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,kBACEpB,UAAWC,EACXU,KAAK,OACLI,SATiB,SAAAlB,GACnB,IAAME,EAAQF,EAAEO,OAAOL,MACvBmB,EAAUnB,GACVoB,GAASE,EAAAA,EAAAA,IAAatB,KAOpBA,MAAOkB,ICjBb,MAAuB,uBCOR,SAASK,EAAT,GAAqC,IAAblC,EAAY,EAAZA,SACrC,GAAiBmC,EAAAA,EAAAA,MAAVC,GAAP,eACMP,GAASQ,EAAAA,EAAAA,IAAYC,EAAAA,IAErBC,EAAY,OAAGvC,QAAH,IAAGA,OAAH,EAAGA,EAAU6B,QAAO,qBAAG3B,KAClCiB,cAAcqB,SAASX,MAM9B,OACE,eAAIjB,UAAWC,EAAf,UACe,OAAZ0B,QAAY,IAAZA,OAAA,EAAAA,EAAcE,QAAS,GACtBF,EAAaG,KAAI,gBAAGxC,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQuC,EAAjB,EAAiBA,GAAjB,OACf,2BACE,0BACE,SAAC,MAAD,CAAiBrB,KAAK,SADxB,IACmCpB,EADnC,KAC2CE,MAE3C,mBAAQmB,KAAK,SAASqB,QAAS,kBAZnB,SAACD,EAAIzC,GACzBkC,EAAOO,GACPtB,EAAAA,OAAAA,KAAA,UAAenB,EAAf,yBAU6C2C,CAAcF,EAAIzC,IAAvD,UACE,SAAC,MAAD,QALKyC,Q,cCfJ,SAASG,IACtB,IAAM5C,GAAOmC,EAAAA,EAAAA,IAAYU,EAAAA,IACjBC,GAASC,EAAAA,EAAAA,IAAsB/C,GAA/B8C,KAER,OACE,iCACE,SAACE,EAAA,EAAD,CAAWzB,MAAM,YAAjB,UACE,SAAC1B,EAAD,CAAMC,SAAUgD,OAElB,UAACE,EAAA,EAAD,CAAWzB,MAAM,WAAjB,WACE,SAACG,EAAD,KACA,SAACM,EAAD,CAAclC,SAAUgD,Y,mBClBhC,KAAgB,UAAY","sources":["components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsList/Contacts.module.css?3131","components/ContactsList/ContactsList.jsx","views/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["import s from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { FaPhone, FaRegUser } from 'react-icons/fa';\nimport { useAddContactMutation } from 'redux/contacts';\nimport { PropTypes } from 'prop-types';\n\nexport default function Form({ contacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const checkContact = name => {\n    if (!contacts) {\n      return false;\n    }\n    const find = contacts?.some(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n    return find;\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    if (checkContact(name)) {\n      return Notify.failure(`${name} is already in contacts`);\n    }\n    addContact({ name, number });\n    setName('');\n    setNumber('');\n    return Notify.success(`${name} was added to your contacts`);\n  };\n\n  return (\n    <form className={s.container} onSubmit={onSubmit}>\n      <p>\n        Name <FaRegUser size=\"12px\" />\n      </p>\n      <input\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n      />\n      <p>\n        Phone <FaPhone size=\"12px\" />\n      </p>\n      <input\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import s from './Filter.module.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter';\n\nexport default function Filter() {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    const value = e.target.value;\n    setFilter(value);\n    dispatch(changeFilter(value));\n  };\n  return (\n    <input\n      className={s.filter}\n      type=\"text\"\n      onChange={handleChange}\n      value={filter}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__Gxku1\"};","import s from './Contacts.module.css';\nimport { FaRegUserCircle, FaBan } from 'react-icons/fa';\nimport { useDeleteContactMutation } from 'redux/contacts';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter';\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\n\nexport default function ContactsList({ contacts }) {\n  const [remove] = useDeleteContactMutation();\n  const filter = useSelector(getFilter);\n\n  const contactsList = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n  const removeContact = (id, name) => {\n    remove(id);\n    Notify.info(`${name} contact was removed`);\n  };\n  return (\n    <ul className={s.list}>\n      {contactsList?.length > 0 &&\n        contactsList.map(({ name, number, id }) => (\n          <li key={id}>\n            <p>\n              <FaRegUserCircle size=\"13px\" /> {name}: {number}\n            </p>\n            <button type=\"button\" onClick={() => removeContact(id, name)}>\n              <FaBan />\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import Container from 'components/Container';\nimport Form from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactsList from 'components/ContactsList';\nimport { useFetchContactsQuery } from 'redux/contacts';\nimport { useSelector } from 'react-redux';\nimport { getUserName } from 'redux/auth';\n\nexport default function Contacts() {\n  const name = useSelector(getUserName);\n  const { data } = useFetchContactsQuery(name);\n\n  return (\n    <>\n      <Container title=\"Phonebook\">\n        <Form contacts={data} />\n      </Container>\n      <Container title=\"Contacts\">\n        <Filter />\n        <ContactsList contacts={data} />\n      </Container>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\"};"],"names":["Form","contacts","useState","name","setName","number","setNumber","useAddContactMutation","addContact","handleChange","e","currentTarget","value","className","s","onSubmit","preventDefault","target","some","contact","toLowerCase","checkContact","Notify","size","type","pattern","title","required","onChange","Filter","filter","setFilter","dispatch","useDispatch","changeFilter","ContactsList","useDeleteContactMutation","remove","useSelector","getFilter","contactsList","includes","length","map","id","onClick","removeContact","Contacts","getUserName","data","useFetchContactsQuery","Container"],"sourceRoot":""}